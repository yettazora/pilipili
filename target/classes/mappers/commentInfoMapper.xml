<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

        <!--建立sql查询结果接口与实体属性的映射关系-->
<mapper namespace="com.yetta.pilipili.dao.CommentInfoMapper">
  <resultMap id="CommentInfoMap" type="com.yetta.pilipili.entity.CommentInfo">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="video_id" jdbcType="INTEGER" property="videoId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
  </resultMap>

  <!-- 插入新的接口 -->
  <insert id="insert" parameterType="com.yetta.pilipili.entity.CommentInfo">
    INSERT INTO comment_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="videoId!=null and videoId!=''">video_id,</if>
      <if test="userId!=null and userId!=''">user_id,</if>
      <if test="loginName!=null and loginName!=''">login_name,</if>
      <if test="content!=null and content!=''">content,</if>
      <if test="updateTime!=null">update_time,</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="videoId!=null and videoId!=''">#{videoId},</if>
      <if test="userId!=null and userId!=''">#{userId},</if>
      <if test="loginName!=null and loginName!=''">#{loginName},</if>
      <if test="content!=null and content!=''">#{content},</if>
      <if test="updateTime!=null">#{updateTime},</if>
    </trim>
  </insert>

  <!-- 获取某个视频的评论列表 -->
  <!--date_format(ci.update_time, '%Y-%m-%d %H:%i:%s') AS update_time,-->
  <select id="listByVideoId" resultMap="CommentInfoMap">
    SELECT ci.id,ci.video_id,ci.user_id,ci.login_name,ci.content,
    ci.update_time,
    upi.avatar
    FROM comment_info ci,user_profile_info upi
    WHERE ci.user_id = upi.user_id
    AND ci.video_id = #{videoId}
    ORDER BY update_time DESC
  </select>

  <!-- 获取某个视频的评论条数 -->
  <select id="countByVideoId" resultType="int">
    SELECT COUNT(*) FROM comment_info WHERE video_id = #{videoId}
  </select>

  <!-- 删除评论表中的内容 -->
  <delete id="deleteByUserIdArr">
    DELETE FROM comment_info WHERE user_id IN
    <foreach collection="userIdArr" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
</mapper>